{"version":3,"sources":["Global.style.tsx","components/Footer/Footer.style.ts","components/Footer/Footer.tsx","components/Header/Header.style.ts","assets/img/logo.png","GlobalState/initialState.ts","GlobalState/States/characterList.ts","GlobalState/States/characterDetail.ts","GlobalState/reducers/reducer.ts","GlobalState/GlobalState.tsx","components/SearchBar/SearchBar.style.ts","components/SearchBar/SearchBar.tsx","components/Header/Header.tsx","components/Picture/Picture.style.ts","components/Picture/Picture.tsx","pages/CharacterDetails/CharacterDetails.style.ts","assets/img/back-arrow.svg","pages/CharacterDetails/CharacterDetails.tsx","components/Pagination/Pagination.style.ts","components/Pagination/Pagination.tsx","pages/Home/Home.style.ts","components/Button/Button.style.ts","components/Tile/Tile.style.ts","components/Tile/Tile.tsx","components/TileContainer/TileContainer.style.ts","components/TileContainer/TileContainer.tsx","assets/img/star-ship2.jpg","pages/Home/Home.tsx","CustomizedRoutes/CustomizedRoutes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalStyles","createGlobalStyle","FooterStyle","styled","footer","Footer","StyledHeader","header","initialState","characterList","list","pagination","prev","next","totalPages","character","id","name","characterImage","birthYear","height","mass","gender","hairColor","eyeColor","skinColor","homeWorld","image","population","size","pageTitle","reducer","state","action","type","payload","GlobalState","createContext","dispatch","GlobalProvider","props","children","useReducer","Provider","value","SearchBarStyle","div","SearchResults","CHARACTER_SEARCH","gql","SearchBar","useState","results","setResults","searchValue","setSearchValue","navigate","useNavigate","useQuery","variables","search","loading","error","data","useContext","useEffect","characters","characterSearch","onChange","event","currentTarget","length","placeholder","map","result","onClick","preventDefault","to","Header","src","Logo","alt","PictureStyle","Picture","url","style","defaultProps","undefined","CharacterContainer","UlStyle","ul","DotStyle","span","BackButton","CharacterDetails","BackIcon","className","width","hair","index","backgroundColor","title","skin","eye","PaginationStyle","nav","Pagination","aria-label","Array","from","item","MainStyle","main","BGImage","Button","button","TileMainStyle","a","CharacterInfo","MoreInfo","Tile","info","href","TileContainerStyle","CHARACTER_LIST_QUERY","TileContainer","page","Home","pageNumber","setPageNumber","useParams","currentPage","parseInt","BG","CustomizedRoutes","path","element","padding","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.4bb6e927.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n    body {\r\n        background-color: #fcfcfc;\r\n        font-family: 'Roboto', sans-serif;\r\n        font-size: 14px;\r\n    }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FooterStyle = styled.footer`\r\n  padding: 32px 0;\r\n  text-align: center;\r\n  border-top: 1px solid #dadada;\r\n  background-color: #f26f4a;\r\n  font-size: 18px;\r\n  font-family: \"PT Sans\", sans-serif;\r\n  font-weight: 400;\r\n  font-style: italic;\r\n  color: #f6f6f6;\r\n\r\n  span {\r\n    color: #474747;\r\n    font-size: 25px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { FooterStyle } from \"./Footer.style\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <FooterStyle>\r\n      &copy; 2021. Made with{` `}\r\n      <span>&hearts;</span>\r\n      {` `}by Sabisa\r\n    </FooterStyle>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n  background-color: #7d858a;\r\n  padding: 2px 58px 8px;\r\n  box-shadow: 1px 1px 10px rgb(0 0 0 / 17%);\r\n  font-size: 28px;\r\n  font-weight: 500;\r\n  position: relative;\r\n  height: 100px;\r\n  border-bottom: #f26f4a 3px solid;\r\n  padding-top: 30px;\r\n\r\n  img {\r\n    position: absolute;\r\n    left: 58px;\r\n    top: 2px;\r\n    height: 90px;\r\n    width: auto;\r\n  }\r\n\r\n  > div {\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding-left: 103px;\r\n\r\n    > div:first-child {\r\n      color: #f6f6f6;\r\n      flex-grow: 1;\r\n      flex-basis: 0;\r\n      max-width: 100%;\r\n      padding-top: 32px;\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/logo.fd2e7f5a.png\";","import characterList from \"./States/characterList\";\r\nimport character from \"./States/characterDetail\";\r\n\r\nexport const initialState = {\r\n  characterList,\r\n  character,\r\n  pageTitle: \"\",\r\n};\r\n\r\nexport type GlobalStateProps = typeof initialState;\r\n","import { Character } from \"../../interface/character\";\r\n\r\ntype CharacterList = {\r\n  list: Character[];\r\n  pagination: {\r\n    prev: number;\r\n    next: number;\r\n    totalPages: number;\r\n  };\r\n};\r\n\r\nconst characterList: CharacterList = {\r\n  list: [],\r\n  pagination: {\r\n    prev: 0,\r\n    next: 0,\r\n    totalPages: 1,\r\n  },\r\n};\r\n\r\nexport default characterList;\r\n","import { Character } from \"../../interface/character\";\r\n\r\nconst character: Character = {\r\n  id: 0,\r\n  name: \"\",\r\n  characterImage: \"\",\r\n  birthYear: \"\",\r\n  height: \"\",\r\n  mass: \"\",\r\n  gender: \"\",\r\n  hairColor: [],\r\n  eyeColor: [],\r\n  skinColor: [],\r\n\r\n  homeWorld: {\r\n    image: \"\",\r\n    name: \"\",\r\n    population: \"\",\r\n    size: \"\",\r\n  },\r\n};\r\n\r\nexport default character;\r\n","import { GlobalStateProps } from \"../initialState\";\r\n\r\nconst reducer = (\r\n  state: GlobalStateProps,\r\n  action: {\r\n    type: string;\r\n    payload?: any;\r\n  }\r\n) => {\r\n  switch (action.type) {\r\n    case \"ADD_CHARACTERS\":\r\n      return {\r\n        ...state,\r\n        characterList: {\r\n          list: action.payload.list,\r\n          pagination: action.payload.pagination,\r\n        },\r\n      };\r\n    case \"UPDATE_CHARACTER\":\r\n      return {\r\n        ...state,\r\n        character: action.payload,\r\n      };\r\n    case \"UPDATE_TITLE\":\r\n      return {\r\n        ...state,\r\n        pageTitle: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { createContext, useReducer } from \"react\";\r\nimport { GlobalStateProps, initialState } from \"./initialState\";\r\nimport reducer from \"./reducers/reducer\";\r\n\r\n// Create context\r\nexport const GlobalState = createContext<{\r\n  state: GlobalStateProps;\r\n  dispatch: React.Dispatch<{\r\n    type: string;\r\n    payload?: any;\r\n  }>;\r\n}>({\r\n  state: initialState,\r\n  dispatch: () => undefined,\r\n});\r\n\r\n// Provider component\r\nexport const GlobalProvider = (props: { children: React.ReactNode }) => {\r\n  const { children } = props;\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  return (\r\n    <GlobalState.Provider\r\n      value={{\r\n        state,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalState.Provider>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchBarStyle = styled.div`\r\n  width: 500px;\r\n  position: relative;\r\n\r\n  input {\r\n    font-size: 15px;\r\n    padding: 7px 15px;\r\n    border-radius: 3px;\r\n    border: none;\r\n    max-width: 341px;\r\n    width: 100%;\r\n    height: 40px;\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const SearchResults = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  box-shadow: 1px 1px 14px rgb(0 0 0 / 23%);\r\n  margin-top: 6px;\r\n  border-radius: 4px;\r\n  padding: 15px 0;\r\n  z-index: 2;\r\n\r\n  ul {\r\n    padding-left: 0;\r\n    margin-bottom: 0;\r\n\r\n    li {\r\n      list-style-type: none;\r\n\r\n      a {\r\n        display: block;\r\n        font-size: 15px;\r\n        text-decoration: none;\r\n        padding: 8px 15px;\r\n        color: #000;\r\n        background-color: transparent;\r\n        transition: background-color 0.2s ease-in-out;\r\n\r\n        &:hover {\r\n          background-color: #eee;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\nimport React, { useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { GlobalState } from \"../../GlobalState/GlobalState\";\r\nimport { Character } from \"../../interface/character\";\r\nimport { SearchBarStyle, SearchResults } from \"./SearchBar.style\";\r\n\r\nconst CHARACTER_SEARCH = gql`\r\n  query ($search: String!) {\r\n    characterSearch(search: $search) {\r\n      id\r\n      name\r\n      characterImage\r\n      birthYear\r\n      height\r\n      mass\r\n      gender\r\n      hairColor\r\n      eyeColor\r\n      skinColor\r\n      homeWorld {\r\n        image\r\n        name\r\n        population\r\n        size\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SearchBar = () => {\r\n  const [results, setResults] = useState<Character[]>([]);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { loading, error, data } = useQuery(CHARACTER_SEARCH, {\r\n    variables: {\r\n      search: searchValue,\r\n    },\r\n  });\r\n\r\n  const { dispatch } = useContext(GlobalState);\r\n\r\n  useEffect(() => {\r\n    if (!loading && !error && data) {\r\n      const characters = data.characterSearch;\r\n\r\n      setResults(characters);\r\n    }\r\n  }, [data, error, loading]);\r\n\r\n  const onSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = event.currentTarget;\r\n\r\n    if (value.length === 0) {\r\n      setResults([]);\r\n\r\n      return;\r\n    }\r\n\r\n    setSearchValue(value);\r\n  };\r\n\r\n  const onClick = (\r\n    event: React.MouseEvent<HTMLAnchorElement>,\r\n    character: Character\r\n  ) => {\r\n    event.preventDefault();\r\n\r\n    setResults([]);\r\n\r\n    dispatch({\r\n      type: \"UPDATE_CHARACTER\",\r\n      payload: character,\r\n    });\r\n\r\n    navigate(`/character/${character.id}`);\r\n  };\r\n\r\n  return (\r\n    <SearchBarStyle>\r\n      <input\r\n        type=\"search\"\r\n        onChange={onSearch}\r\n        name=\"star-wars-search\"\r\n        placeholder=\"Search by character name\"\r\n      />\r\n\r\n      {results.length > 0 && (\r\n        <SearchResults>\r\n          <ul>\r\n            {results.map((result) => {\r\n              return (\r\n                <li key={result.id}>\r\n                  <Link\r\n                    onClick={(event) => {\r\n                      onClick(event, result);\r\n                    }}\r\n                    to={`/character/${result.id}`}\r\n                  >\r\n                    {result.name}\r\n                  </Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </SearchResults>\r\n      )}\r\n    </SearchBarStyle>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useContext } from \"react\";\r\nimport { StyledHeader } from \"./Header.style\";\r\nimport Logo from \"../../assets/img/logo.png\";\r\nimport SearchBar from \"../SearchBar\";\r\nimport { GlobalState } from \"../../GlobalState/GlobalState\";\r\n\r\nconst Header = () => {\r\n  const { pageTitle } = useContext(GlobalState).state;\r\n\r\n  return (\r\n    <StyledHeader>\r\n      <img src={Logo} alt=\"\" />\r\n      <div>\r\n        <div>{pageTitle}</div>\r\n        <SearchBar />\r\n      </div>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PictureStyle = styled.div`\r\n  width: 120px;\r\n  height: 120px;\r\n  border-radius: 50%;\r\n\r\n  img {\r\n    height: 100%;\r\n    width: 100%;\r\n    object-fit: cover;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { PictureStyle } from \"./Picture.style\";\r\n\r\ntype Props = {\r\n  url: string;\r\n  style?: React.CSSProperties;\r\n};\r\n\r\nconst Picture = (props: Props) => {\r\n  const { url, style } = props;\r\n  return (\r\n    <PictureStyle style={style}>\r\n      <img src={url} alt=\"\" />\r\n    </PictureStyle>\r\n  );\r\n};\r\nPicture.defaultProps = { style: undefined };\r\n\r\nexport default Picture;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CharacterContainer = styled.div`\r\n  padding: 48px 15px 106px;\r\n  max-width: 829px;\r\n  margin: 0 auto;\r\n\r\n  h1 {\r\n    font-size: 33px;\r\n    padding-bottom: 20px;\r\n    border-bottom: 1px solid #ddd;\r\n    margin-bottom: 33px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    span {\r\n      margin-right: 13px;\r\n    }\r\n  }\r\n\r\n  .col-right {\r\n    border-right: 1px solid #c0bdbd;\r\n\r\n    ul {\r\n      padding-left: 0;\r\n    }\r\n  }\r\n\r\n  > div:not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nexport const UlStyle = styled.ul`\r\n  margin-bottom: 0;\r\n  padding-top: 13px;\r\n  padding-bottom: 10px;\r\n\r\n  li {\r\n    list-style-type: none;\r\n    margin-bottom: 8px;\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport const DotStyle = styled.span`\r\n  padding-left: 11px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  span {\r\n    height: 16px;\r\n    width: 16px;\r\n    border-radius: 50%;\r\n    margin-right: 10px;\r\n    border: 1px solid #000;\r\n  }\r\n`;\r\n\r\nexport const BackButton = styled.div`\r\n  padding-top: 30px;\r\n  padding-left: 67px;\r\n\r\n  a {\r\n    background-color: #f26f4a;\r\n    text-decoration: none;\r\n    color: #fff;\r\n    box-shadow: 1px 1px 3px rgb(0 0 0 / 22%);\r\n    padding: 10px 12px;\r\n    border-radius: 4px;\r\n    display: inline-block;\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/back-arrow.220b0dec.svg\";","import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Picture from \"../../components/Picture\";\r\nimport {\r\n  BackButton,\r\n  CharacterContainer,\r\n  DotStyle,\r\n  UlStyle,\r\n} from \"./CharacterDetails.style\";\r\nimport BackIcon from \"../../assets/img/back-arrow.svg\";\r\nimport { useContext } from \"react\";\r\nimport { GlobalState } from \"../../GlobalState/GlobalState\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst CharacterDetails = () => {\r\n  const { state, dispatch } = useContext(GlobalState);\r\n  const { character } = state;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"UPDATE_TITLE\",\r\n      payload: \"DETAILS\",\r\n    });\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!character.name) {\r\n      navigate(\"/\");\r\n    }\r\n  }, [character.name, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <BackButton>\r\n        <Link to=\"/\">\r\n          <img src={BackIcon} alt=\"\" /> Back Home\r\n        </Link>\r\n      </BackButton>\r\n      <CharacterContainer>\r\n        <div className=\"container-fluid\">\r\n          <h1>\r\n            <span>\r\n              <Picture\r\n                style={{ height: \"50px\", width: \"50px\" }}\r\n                url={character.characterImage}\r\n              />\r\n            </span>\r\n            {character.name}\r\n          </h1>\r\n          <div className=\"row\">\r\n            <div className=\"col col-right\">\r\n              <UlStyle>\r\n                <li>\r\n                  <span>Birth year: </span> {` ${character.birthYear}`}\r\n                </li>\r\n                <li>\r\n                  <span>Height: </span> {` ${character.height}`}\r\n                </li>\r\n                <li>\r\n                  <span>Mass: </span> {` ${character.mass}`}\r\n                </li>\r\n                <li>\r\n                  <span>Gender: </span> {` ${character.gender}`}\r\n                </li>\r\n              </UlStyle>\r\n            </div>\r\n            <div className=\"col\">\r\n              <div>Hover over the dot to see its name color</div>\r\n              <UlStyle>\r\n                <li>\r\n                  <span>Hair-color:</span>{\" \"}\r\n                  <DotStyle>\r\n                    {character.hairColor.map((hair, index) => {\r\n                      return (\r\n                        <span\r\n                          key={`hair_color_${index}`}\r\n                          style={{ backgroundColor: hair }}\r\n                          title={hair}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </DotStyle>\r\n                </li>\r\n                <li>\r\n                  <span>Skin-color:</span>{\" \"}\r\n                  <DotStyle>\r\n                    {character.skinColor.map((skin, index) => {\r\n                      return (\r\n                        <span\r\n                          key={`skin_color_${index}`}\r\n                          style={{ backgroundColor: skin }}\r\n                          title={skin}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </DotStyle>\r\n                </li>\r\n                <li>\r\n                  <span>Eye color:</span>{\" \"}\r\n                  <DotStyle>\r\n                    {character.eyeColor.map((eye, index) => {\r\n                      return (\r\n                        <span\r\n                          key={`eye_color_${index}`}\r\n                          style={{ backgroundColor: eye }}\r\n                          title={eye}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </DotStyle>\r\n                </li>\r\n              </UlStyle>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container-fluid\">\r\n          <h1>Home World</h1>\r\n          <div className=\"row\">\r\n            <div className=\"col-3\">\r\n              <Picture\r\n                style={{ height: \"150px\", width: \"150px\" }}\r\n                url={character.homeWorld.image}\r\n              />\r\n            </div>\r\n            <div className=\"col\">\r\n              <h3>{character.homeWorld.name}</h3>\r\n              <h6>\r\n                Population is {character.homeWorld.population}, planet size is{\" \"}\r\n                {character.homeWorld.size}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </CharacterContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharacterDetails;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PaginationStyle = styled.nav`\r\n  padding-top: 55px;\r\n\r\n  ul {\r\n    justify-content: center;\r\n\r\n    .page-link {\r\n      color: #f26f4a;\r\n      border-color: #f26f4a;\r\n\r\n      &:focus {\r\n        box-shadow: 0 0 0 0.25rem rgb(253 113 13 / 25%);\r\n      }\r\n    }\r\n\r\n    li:first-child,\r\n    li:last-child {\r\n      a {\r\n        background-color: #f26f4a;\r\n        color: #fff;\r\n        width: 80.5px;\r\n        text-align: center;\r\n        transition: background-color 0.2s ease-in-out;\r\n\r\n        &:hover {\r\n          color: #fff;\r\n          background-color: #e26c4a;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GlobalState } from \"../../GlobalState/GlobalState\";\r\nimport { PaginationStyle } from \"./Pagination.style\";\r\n\r\nconst Pagination = () => {\r\n  const { characterList } = useContext(GlobalState).state;\r\n\r\n  return (\r\n    <PaginationStyle aria-label=\"Character navigation list\">\r\n      <ul className=\"pagination\">\r\n        <li className=\"page-item\">\r\n          <Link\r\n            className=\"page-link\"\r\n            to={\r\n              characterList.pagination.prev !== 0\r\n                ? `/${characterList.pagination.prev}`\r\n                : \"\"\r\n            }\r\n            onClick={(event) => {\r\n              if (characterList.pagination.prev === 0) {\r\n                return event.preventDefault();\r\n              }\r\n            }}\r\n          >\r\n            Previous\r\n          </Link>\r\n        </li>\r\n\r\n        {Array.from({ length: characterList.pagination.totalPages }).map(\r\n          (item, index) => {\r\n            return (\r\n              <li className=\"page-item\" key={`pagination__${index}`}>\r\n                <Link className=\"page-link\" to={`/${index + 1}`}>\r\n                  {index + 1}\r\n                </Link>\r\n              </li>\r\n            );\r\n          }\r\n        )}\r\n        <li className=\"page-item\">\r\n          <Link\r\n            className=\"page-link\"\r\n            to={\r\n              characterList.pagination.next !== 0\r\n                ? `/${characterList.pagination.next}`\r\n                : \"\"\r\n            }\r\n            onClick={(event) => {\r\n              if (characterList.pagination.next === 0) {\r\n                return event.preventDefault();\r\n              }\r\n            }}\r\n          >\r\n            Next\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </PaginationStyle>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HomeContainer = styled.div``;\r\n\r\nexport const MainStyle = styled.main`\r\n  padding: 45px 0 30px;\r\n  position: relative;\r\n\r\n  > div {\r\n    max-width: 895px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    position: relative;\r\n    z-index: 1;\r\n  }\r\n\r\n  h3 {\r\n    margin-bottom: 25px;\r\n  }\r\n`;\r\n\r\nexport const BGImage = styled.div`\r\n  position: absolute !important;\r\n  z-index: 0 !important;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  max-width: 100% !important;\r\n  height: 100%;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  border-radius: 4px;\r\n  background-color: #f26f4a;\r\n  border: 1px solid #f26f4a;\r\n  color: #fff;\r\n  padding: 7px 11px 8px;\r\n  text-decoration: none;\r\n  transition: background-color 0.2s ease-in-out;\r\n\r\n  &:hover {\r\n    color: #fff;\r\n    background-color: #e26c4a;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TileMainStyle = styled.a`\r\n  background-color: #fff;\r\n  padding: 15px 25px;\r\n  display: flex;\r\n  transition: background-color 0.2s ease-in-out;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    background-color: #f4f4f4;\r\n  }\r\n`;\r\n\r\nexport const CharacterDetails = styled.div`\r\n  padding-left: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-basis: 0;\r\n  flex-grow: 1;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const CharacterInfo = styled.div`\r\n  font-size: 15px;\r\n  flex-basis: 0;\r\n  flex-grow: 1;\r\n  color: #3d3d3d;\r\n  max-width: 100%;\r\n\r\n  h2 {\r\n    font-size: 23px;\r\n  }\r\n\r\n  span {\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nexport const MoreInfo = styled.div``;\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { GlobalState } from \"../../GlobalState/GlobalState\";\r\nimport { Character } from \"../../interface/character\";\r\nimport { Button } from \"../Button/Button.style\";\r\nimport Picture from \"../Picture\";\r\nimport {\r\n  CharacterDetails,\r\n  CharacterInfo,\r\n  MoreInfo,\r\n  TileMainStyle,\r\n} from \"./Tile.style\";\r\n\r\ntype Props = {\r\n  info: Character;\r\n};\r\n\r\nconst Tile = (props: Props) => {\r\n  const { info } = props;\r\n  const { dispatch } = useContext(GlobalState);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const onClick = (\r\n    event: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>\r\n  ) => {\r\n    event.preventDefault();\r\n\r\n    dispatch({\r\n      type: \"UPDATE_CHARACTER\",\r\n      payload: info,\r\n    });\r\n\r\n    navigate(`/character/${info.id}`);\r\n  };\r\n\r\n  return (\r\n    <TileMainStyle\r\n      aria-label=\"Character tile\"\r\n      href={`/character/${info.id}`}\r\n      onClick={onClick}\r\n    >\r\n      <Picture url={info.characterImage} />\r\n      <CharacterDetails>\r\n        <CharacterInfo>\r\n          <h2>{info.name}</h2>\r\n          <div>\r\n            <span>Born:</span> {info.birthYear}\r\n          </div>\r\n          <div>\r\n            <span>Gender:</span> {info.gender}\r\n          </div>\r\n        </CharacterInfo>\r\n        <MoreInfo>\r\n          <Button onClick={onClick}>More info</Button>\r\n        </MoreInfo>\r\n      </CharacterDetails>\r\n    </TileMainStyle>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TileContainerStyle = styled.div`\r\n  box-shadow: 0px 1px 25px rgb(0 0 0 / 19%);\r\n  border-radius: 4px;\r\n  padding: 30px 85px;\r\n  background-color: #fff;\r\n\r\n  > a:not(:last-child) {\r\n    border-bottom: 1px solid #ddd;\r\n  }\r\n`;\r\n","import { gql, useQuery } from \"@apollo/client\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { GlobalState } from \"../../GlobalState/GlobalState\";\r\nimport Tile from \"../Tile\";\r\nimport { TileContainerStyle } from \"./TileContainer.style\";\r\n\r\nconst CHARACTER_LIST_QUERY = gql`\r\n  query ($page: Int) {\r\n    characters(page: $page) {\r\n      list {\r\n        id\r\n        name\r\n        characterImage\r\n        height\r\n        birthYear\r\n        mass\r\n        gender\r\n        hairColor\r\n        eyeColor\r\n        skinColor\r\n        homeWorld {\r\n          image\r\n          name\r\n          population\r\n          size\r\n        }\r\n      }\r\n      pagination {\r\n        next\r\n        prev\r\n        totalPages\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ntype Props = {\r\n  page: number;\r\n};\r\n\r\nconst TileContainer = (props: Props) => {\r\n  const { page } = props;\r\n\r\n  const { loading, error, data } = useQuery(CHARACTER_LIST_QUERY, {\r\n    variables: {\r\n      page,\r\n    },\r\n  });\r\n  const { dispatch } = useContext(GlobalState);\r\n\r\n  useEffect(() => {\r\n    if (!loading && !error && data) {\r\n      dispatch({\r\n        type: \"ADD_CHARACTERS\",\r\n        payload: {\r\n          list: data.characters.list,\r\n          pagination: data.characters.pagination,\r\n        },\r\n      });\r\n    }\r\n  }, [data, error, loading, dispatch]);\r\n\r\n  const { characterList } = useContext(GlobalState).state;\r\n\r\n  return (\r\n    <TileContainerStyle>\r\n      {!loading &&\r\n        characterList.list.map((character) => {\r\n          return <Tile info={character} key={character.id} />;\r\n        })}\r\n\r\n      {loading && <>Loading data</>}\r\n    </TileContainerStyle>\r\n  );\r\n};\r\n\r\nexport default TileContainer;\r\n","export default __webpack_public_path__ + \"static/media/star-ship2.fa3bc3aa.jpg\";","import React, { useState } from \"react\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport { BGImage, MainStyle } from \"./Home.style\";\r\nimport TileContainer from \"../../components/TileContainer\";\r\n\r\nimport BG from \"../../assets/img/star-ship2.jpg\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { GlobalState } from \"../../GlobalState/GlobalState\";\r\n\r\nconst Home = () => {\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const { page } = useParams();\r\n\r\n  const { dispatch } = useContext(GlobalState);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"UPDATE_TITLE\",\r\n      payload: \"CHARACTERS\",\r\n    });\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    let currentPage = 1;\r\n\r\n    if (page) {\r\n      currentPage = parseInt(page);\r\n    }\r\n\r\n    setPageNumber(currentPage);\r\n  }, [page]);\r\n\r\n  return (\r\n    <div>\r\n      <MainStyle>\r\n        <BGImage>\r\n          <img src={BG} alt=\"\" />\r\n        </BGImage>\r\n        <div>\r\n          <h3>Character List:</h3>\r\n          <TileContainer page={pageNumber} />\r\n\r\n          <Pagination />\r\n        </div>\r\n      </MainStyle>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport CharacterDetails from \"../pages/CharacterDetails\";\r\nimport Home from \"../pages/Home\";\r\n\r\nconst CustomizedRoutes = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<Home />} />\r\n      <Route path=\"/:page\" element={<Home />} />\r\n      <Route path=\"/character/:characterId\" element={<CharacterDetails />} />\r\n      <Route\r\n        path=\"*\"\r\n        element={\r\n          <main style={{ padding: \"1rem\" }}>\r\n            <p>There's nothing here!</p>\r\n          </main>\r\n        }\r\n      />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default CustomizedRoutes;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./index.css\";\r\n\r\nimport GlobalStyles from \"./Global.style\";\r\nimport Footer from \"./components/Footer\";\r\nimport Header from \"./components/Header\";\r\nimport CustomizedRoutes from \"./CustomizedRoutes\";\r\nimport { GlobalProvider } from \"./GlobalState/GlobalState\";\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <GlobalStyles />\r\n\r\n      <Header />\r\n      <CustomizedRoutes />\r\n      <Footer />\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Global.style\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"https://n7p42.sse.codesandbox.io\",\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <ApolloProvider client={client}>\r\n        <App />\r\n      </ApolloProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"star-wars\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}